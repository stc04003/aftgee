// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getSuv
arma::vec getSuv(arma::vec Time, arma::vec censor, arma::vec wgt);
RcppExport SEXP _aftgee_getSuv(SEXP TimeSEXP, SEXP censorSEXP, SEXP wgtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type censor(censorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type wgt(wgtSEXP);
    rcpp_result_gen = Rcpp::wrap(getSuv(Time, censor, wgt));
    return rcpp_result_gen;
END_RCPP
}
// log_ns_est
arma::vec log_ns_est(const arma::vec& a, const arma::mat& X, const arma::vec& D, const arma::vec& Y, const arma::vec& W, const arma::vec& gw);
RcppExport SEXP _aftgee_log_ns_est(SEXP aSEXP, SEXP XSEXP, SEXP DSEXP, SEXP YSEXP, SEXP WSEXP, SEXP gwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gw(gwSEXP);
    rcpp_result_gen = Rcpp::wrap(log_ns_est(a, X, D, Y, W, gw));
    return rcpp_result_gen;
END_RCPP
}
// gehan_s_est
arma::vec gehan_s_est(const arma::vec& a, const arma::mat& X, const arma::vec& D, const arma::vec& Y, const arma::vec& W, const int& nc, const arma::mat& sigma, const arma::vec& gw);
RcppExport SEXP _aftgee_gehan_s_est(SEXP aSEXP, SEXP XSEXP, SEXP DSEXP, SEXP YSEXP, SEXP WSEXP, SEXP ncSEXP, SEXP sigmaSEXP, SEXP gwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gw(gwSEXP);
    rcpp_result_gen = Rcpp::wrap(gehan_s_est(a, X, D, Y, W, nc, sigma, gw));
    return rcpp_result_gen;
END_RCPP
}
// gehan_ns_est
arma::vec gehan_ns_est(const arma::vec& a, const arma::mat& X, const arma::vec& D, const arma::vec& Y, const arma::vec& W, const arma::vec& gw);
RcppExport SEXP _aftgee_gehan_ns_est(SEXP aSEXP, SEXP XSEXP, SEXP DSEXP, SEXP YSEXP, SEXP WSEXP, SEXP gwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gw(gwSEXP);
    rcpp_result_gen = Rcpp::wrap(gehan_ns_est(a, X, D, Y, W, gw));
    return rcpp_result_gen;
END_RCPP
}
// gehan_s_wt
arma::vec gehan_s_wt(const arma::vec& a, const arma::mat& X, const arma::vec& Y, const arma::vec& W, const int& nc, const arma::mat& sigma);
RcppExport SEXP _aftgee_gehan_s_wt(SEXP aSEXP, SEXP XSEXP, SEXP YSEXP, SEXP WSEXP, SEXP ncSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(gehan_s_wt(a, X, Y, W, nc, sigma));
    return rcpp_result_gen;
END_RCPP
}
